privilegeTargets:
  Neos\Flow\Security\Authorization\Privilege\Method\MethodPrivilege:
    'NeosRulez.Neos.FrontendLogin:LoginControllerActions':
      matcher: 'method(Neos\Flow\Security\Authentication\Controller\AbstractAuthenticationController->.*Action()) || method(NeosRulez\Neos\FrontendLogin\Controller\LoginController->.*Action())'
    'NeosRulez.Neos.FrontendLogin:Module.UserControllerActions':
      matcher: 'method(NeosRulez\Neos\FrontendLogin\Controller\Module\UserController->.*Action())'
  Neos\ContentRepository\Security\Authorization\Privilege\Node\ReadNodePrivilege:
    'NeosRulez.Neos.FrontendLogin:RestrictedContentCollection':
      matcher: 'nodeIsOfType("NeosRulez.Neos.FrontendLogin:Content.RestrictedContentCollection")'
    'NeosRulez.Neos.FrontendLogin:RestrictedContentCollection.Public':
      matcher: 'nodeIsOfType("NeosRulez.Neos.FrontendLogin:Content.RestrictedContentCollection.Public")'

roles:
  'Neos.Flow:Everybody':
    privileges:
      -
        privilegeTarget: 'NeosRulez.Neos.FrontendLogin:LoginControllerActions'
        permission: GRANT
      -
        privilegeTarget: 'NeosRulez.Neos.FrontendLogin:RestrictedContentCollection.Public'
        permission: GRANT
  'Neos.Neos:AbstractEditor':
    privileges:
      -
        privilegeTarget: 'NeosRulez.Neos.FrontendLogin:Module.UserControllerActions'
        permission: GRANT
      -
        privilegeTarget: 'NeosRulez.Neos.FrontendLogin:RestrictedContentCollection'
        permission: GRANT
      -
        privilegeTarget: 'NeosRulez.Neos.FrontendLogin:RestrictedContentCollection.Public'
        permission: GRANT
  'NeosRulez.Neos.FrontendLogin:FrontendUser':
    privileges:
      -
        privilegeTarget: 'NeosRulez.Neos.FrontendLogin:RestrictedContentCollection'
        permission: GRANT
      -
        privilegeTarget: 'NeosRulez.Neos.FrontendLogin:RestrictedContentCollection.Public'
        permission: DENY
